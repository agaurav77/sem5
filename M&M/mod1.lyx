#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter Inconsolata
\font_math auto
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 4cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Revision of logic circuits with emphasis on control lines
\end_layout

\begin_layout Standard
Using binary logic for computers is much easier than decimal logic, since
 it naturally allows us to use the two state analogy of switches.
 Switches can be in two states - on, off.
 Similarly, binary numbers are represented by two types of digits - 0 and
 1.
 
\end_layout

\begin_layout Subsection
Microprocessors & Microcontrollers
\end_layout

\begin_layout Standard
Microprocessors are at the core of modern day computing.
 On the basis of instructions that microprocessors understand, their computers
 are called either RISCs (reduced instruction set computers) or CISCs (complex
 instruction set computers).
 RISCs typically consist of more internal registers than CISCs and have
 much simpler designs.
 The difference between microprocessors and microcontrollers, however, is
 more subtle.
 A 
\series bold
microprocessor
\series default
 is highly programmable and understands all general instructions.
 
\series bold
Microcontrollers
\series default
, are packaged and pre programmed boards meant for specific purposes, thereby
 understanding specific inputs.
 For example, your Android phone has a microprocessor, but your oven or
 fridge typically works via a microcontroller.
\end_layout

\begin_layout Subsection
ASCII
\end_layout

\begin_layout Standard
ASCII stands for 
\series bold
American Standard Code for Information Interchange
\series default
.
 Its an input output mapping which maps characters, numbers, newlines, spaces
 and different sorts of inputs to a binary 7 digit code.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename img/ASCII1.GIF
	scale 40

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
SAP concepts with stress on timing diagrams
\end_layout

\begin_layout Section
Microinstructions
\end_layout

\begin_layout Section
Microprogramming
\end_layout

\begin_layout Section
Variable machine cycle
\end_layout

\begin_layout Section
Architecture of 8085 Processor
\end_layout

\begin_layout Section
Functions of all signals
\end_layout

\begin_layout Section
Bus concepts
\end_layout

\begin_layout Section
Multiplexed and De-multiplexed Bus
\end_layout

\begin_layout Section
Minimum system
\end_layout

\end_body
\end_document
